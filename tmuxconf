# remap prefix to Meta + o
set -g prefix M-o
unbind C-b
bind M-o send-prefix

# after this nvim will show pipe in insert mode in tmux
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'


set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh
set -g base-index 1
set -g pane-base-index 1
set -g set-titles on
set-window-option -g mode-keys vi 
set -g status-keys vi

# Faster Command Sequences
set -s escape-time 0
# mouse can be used to select panes
#set -g mouse-select-pane on
# mouse can be used to select windows (by clicking in the status bar)
#set -g mouse-select-window on
# mouse can be used to resize panes (by dragging dividers)
#set -g mouse-resize-pane on
# not really sure what this does, but with it, the scrollwheel works inside Vim
# set -g mouse-utf8 on
set -g set-clipboard on
set -g history-limit 50000


# allow mouse to enter copy mode and initiate selection
set -g mouse on;

# Style
set -g status-bg default
set -g status-fg default
set -g status-left ""
set -g status-right "#[fg=green]#H[#(wemux status_users)]"
#set -g status-position bottom

set -g pane-active-border-bg default
set -g pane-active-border-fg blue
set -g pane-border-bg default
set -g pane-border-fg white

set -g display-panes-active-colour red
set -g display-panes-colour blue

# Highlight active window
setw -g window-status-current-bg red
setw -g window-status-current-fg default


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# copy mode
unbind p
bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'r' rectangle-toggle
# bind -t vi-copy 'y' copy-selection

# quick pane cycling
#unbind ^F
#bind ^F select-pane -t :.+

# select window with meta+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-h previous-window
bind -n M-l next-window
bind -n M-< swap-window -t -1
bind -n M-> swap-window -t +1
# bind -n M-q run "(tmux display-message -p '#{pane_title}' | grep -iq 'nvim' && tmux send-keys M-q) || tmux kill-pane"
bind -n M-q run "(tmux display-message -p '#{pane_title}' | grep -iq 'vim' && tmux send-keys M-q) || tmux kill-pane"
bind -n M-m resize-pane -Z

# default window title colors
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
# set-window-option -g window-status-format '#{pane_current_path}'


# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq 'vi' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq 'vi' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq 'vi' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq 'vi' && tmux send-keys C-l) || tmux select-pane -R"

# splits
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

bind < swap-window -t -1
bind > swap-window -t +1

# resize panes
bind -r ^L resize-pane -R 5
bind -r ^J resize-pane -D 5
bind -r ^K resize-pane -U 5
bind -r ^H resize-pane -L 5

# zoom
unbind ^M
bind ^M resize-pane -Z

# Copy/paste to system clipboard
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
